apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: ruby-ex
  namespace: ns1
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  name: ruby-ex
  namespace: ns1
  labels:
    app: ruby-ex
    app.kubernetes.io/component: ruby-ex
    app.kubernetes.io/instance: ruby-ex
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'ruby-ex:latest'
  resources: {}
  successfulBuildsHistoryLimit: 1
  failedBuildsHistoryLimit: 1
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'ruby:2.6'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/sclorg/ruby-ex.git'
  triggers:
    - type: GitHub
      github:
        secret: eLlI95vpVWNx3oe1g3gc
    - type: Generic
      generic:
        secret: oMDp9gaVhtqla6dQJ_QN
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        lastTriggeredImageID: >-
          image-registry.openshift-image-registry.svc:5000/openshift/ruby
  runPolicy: Serial
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ruby-ex
  namespace: ns1
  labels:
    app: ruby-ex
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: ruby-ex
  template:
    metadata:
      labels:
        deployment: ruby-ex
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: ruby-ex
          image: >-
            image-registry.openshift-image-registry.svc:5000/ns1/ruby-ex
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: ruby-ex
  namespace: ns1
  labels:
    deployment: ruby-ex
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    deployment: ruby-ex